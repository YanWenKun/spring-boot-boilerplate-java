<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <!-- 软件制品信息 开始 -->
    <groupId>com.example</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Spring Boot Boilerplate Project</name>
    <description>Spring Boot 样板项目</description>
    <inceptionYear>2019</inceptionYear>
    <!-- 软件制品信息 结束 -->

    <properties>
        <java.version>11</java.version>
    </properties>

    <!-- 依赖项 开始 -->
    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>
    <!-- 依赖项 结束 -->

    <!-- Maven构建插件 开始 -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <!-- Maven构建插件 结束 -->

    <!-- Maven Profiles定义 开始 -->
    <!-- 注意：Maven Profile不是Spring Profile -->
    <!-- 注意：本项目中不要同时激活多个Maven Profile -->
    <!-- 使用Maven指定Profile打包的用法：命令行： ./mvnw package -P profile_name -->
    <profiles>
        <!-- 开发阶段Profile，默认 -->
        <profile>
            <id>dev</id>
            <properties>
                <activatedProperties>dev</activatedProperties>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 验证阶段Profile -->
        <profile>
            <id>staging</id>
            <properties>
                <activatedProperties>staging</activatedProperties>
            </properties>
        </profile>
        <!-- 生产阶段Profile -->
        <profile>
            <id>production</id>
            <properties>
                <activatedProperties>production</activatedProperties>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                    <version>2.5.0</version>
                </dependency>
                <dependency>
                    <groupId>com.aliyun.openservices</groupId>
                    <artifactId>aliyun-log-logback-appender</artifactId>
                    <version>0.1.15</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
    <!-- Maven Profiles定义 结束 -->

</project>
